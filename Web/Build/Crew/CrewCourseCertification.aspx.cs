using System;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using SouthNests.Phoenix.Framework;
using SouthNests.Phoenix.Registers;
using SouthNests.Phoenix.Common;
using System.Web.UI.HtmlControls;
using SouthNests.Phoenix.CrewManagement;
using System.Text;
using Telerik.Web.UI;

public partial class CrewCourseCertification : PhoenixBasePage
{


	protected void Page_Load(object sender, EventArgs e)
	{
		try
		{
			SessionUtil.PageAccessRights(this.ViewState);
			PhoenixToolbar toolbar = new PhoenixToolbar();
			toolbar.AddImageButton("../Crew/CrewCourseCertification.aspx?batchid=" + Request.QueryString["batchid"], "Export to Excel", "icon_xls.png", "Excel");
			toolbar.AddImageLink("javascript:CallPrint('gvCertificationList')", "Print Grid", "icon_print.png", "PRINT");
			MenuCrewCertificationList.AccessRights = this.ViewState;
			MenuCrewCertificationList.MenuList = toolbar.Show();
			cmdHiddenSubmit.Attributes.Add("style", "visibility:hidden;");
			MenuCrewCertificationList.SetTrigger(pnlCrewCourseCertificationList);

			if (!IsPostBack)
			{
				ViewState["PAGENUMBER"] = 1;
				ViewState["SORTEXPRESSION"] = null;
				ViewState["SORTDIRECTION"] = null;
				ViewState["CURRENTINDEX"] = 1;
				if (Filter.CurrentCourseSelection != null)
				{
					EditCourseDetails();
				}
				if (Request.QueryString["batchid"] != null)
				{
					EditBatchDetails(Convert.ToInt32(Request.QueryString["batchid"]));
				}
				if (Request.QueryString["batchid"] != null)
				{
					ListCrewEnrollment(Convert.ToInt32(Request.QueryString["batchid"]));
				}
			}
			BindData();
		}
		catch (Exception ex)
		{
			ucError.ErrorMessage = ex.Message;
			ucError.Visible = true;
		}

	}
	protected void EditCourseDetails()
	{
		try
		{

			int courseid = Convert.ToInt32(Filter.CurrentCourseSelection);
			DataSet ds = PhoenixRegistersDocumentCourse.EditDocumentCourse(courseid);
			if (ds.Tables[0].Rows.Count > 0)
			{

				ucCourse.SelectedCourse = ds.Tables[0].Rows[0]["FLDDOCUMENTID"].ToString();
				ucCourseType.SelectedHard = ds.Tables[0].Rows[0]["FLDDOCUMENTTYPE"].ToString();
			}
		}

		catch (Exception ex)
		{
			ucError.ErrorMessage = ex.Message;
			ucError.Visible = true;
		}

	}
	protected void EditBatchDetails(int batchid)
	{
		try
		{

			DataSet ds = PhoenixRegistersBatch.EditBatch(batchid);
			if (ds.Tables[0].Rows.Count > 0)
			{
				txtBatchNo.Text = ds.Tables[0].Rows[0]["FLDBATCHNAME"].ToString();

			}
		}

		catch (Exception ex)
		{
			ucError.ErrorMessage = ex.Message;
			ucError.Visible = true;
		}

	}
	protected void ListCrewEnrollment(int batchid)
	{
		try
		{
			
			DataSet ds = PhoenixCrewCourseEnrollment.ListCrewCourseEnrollment(batchid);
			if (ds.Tables[0].Rows.Count > 0)
			{
				chkCO.Checked=	ds.Tables[0].Rows[0]["FLDCOURSEOFFICER"].ToString() == "1" ? true : false;
				chkFA.Checked = ds.Tables[0].Rows[0]["FLDFINALAUTHORITY"].ToString() == "1" ? true : false;
				
			}
		}

		catch (Exception ex)
		{
			ucError.ErrorMessage = ex.Message;
			ucError.Visible = true;
		}

	}
	protected void ShowExcel()
	{

		string[] alColumns = { "FLDNAME", "FLDRANKCODE", "FLDCERTIFICATELOA", "FLDCOURSEOFFICER", "FLDFINALAUTHORITY", "FLDSTATUS","FLDCERTIFICATENO", "FLDCERTGENERATEDBY", "FLDCERTDATE" };
		string[] alCaptions = { "Name", "Rank", "Cert/LOA", "Course Oficer", "Final Authority", "Status", "Cert No", "Generated by", "Generated Date" };

		DataSet ds = PhoenixCrewCourseEnrollment.CrewCourseCertificationSearch(
					General.GetNullableInteger(Request.QueryString["batchid"]));


		Response.AddHeader("Content-Disposition", "attachment; filename=CertificationList.xls");
		Response.ContentType = "application/vnd.msexcel";
		Response.Write("<TABLE BORDER='0' CELLPADDING='2' CELLSPACING='0' width='100%'>");
		Response.Write("<tr>");
		Response.Write("<td><img src='http://" + Request.Url.Authority + Session["images"] + "/esmlogo4_small.png" + "' /></td>");
		Response.Write("<td><h3>Certification List</h3></td>");
		Response.Write("<td colspan='" + (alColumns.Length - 2).ToString() + "'>&nbsp;</td>");
		Response.Write("</tr>");
		Response.Write("</TABLE>");
		Response.Write("<br />");
		Response.Write("<TABLE BORDER='1' CELLPADDING='2' CELLSPACING='2' width='100%'>");
		Response.Write("<tr>");
		for (int i = 0; i < alCaptions.Length; i++)
		{
			Response.Write("<td width='20%'>");
			Response.Write("<b>" + alCaptions[i] + "</b>");
			Response.Write("</td>");
		}
		Response.Write("</tr>");
		foreach (DataRow dr in ds.Tables[0].Rows)
		{
			Response.Write("<tr>");
			for (int i = 0; i < alColumns.Length; i++)
			{
				Response.Write("<td>");
				Response.Write(dr[alColumns[i]]);
				Response.Write("</td>");
			}
			Response.Write("</tr>");
		}
		Response.Write("</TABLE>");
		Response.End();
	}

	protected void CrewCertificationList_TabStripCommand(object sender, EventArgs e)
	{
		try
		{
			DataListCommandEventArgs dce = (DataListCommandEventArgs)e;
			if (dce.CommandName.ToUpper().Equals("FIND"))
			{
				ViewState["PAGENUMBER"] = 1;
				BindData();
			}
			if (dce.CommandName.ToUpper().Equals("EXCEL"))
			{
				ShowExcel();
			}

		}
		catch (Exception ex)
		{
			ucError.ErrorMessage = ex.Message;
			ucError.Visible = true;
		}
	}
	protected void UpdateStatus(object sender, EventArgs e)
	{
		try
		{
			PhoenixCrewCourseEnrollment.UpdateCrewEnrollmentAuthorization(General.GetNullableInteger(Request.QueryString["batchid"]),
				chkCO.Checked == true ? 1 : 0, chkFA.Checked == true ? 1 : 0);
			ListCrewEnrollment(Convert.ToInt32(Request.QueryString["batchid"]));
			BindData();
		}
		catch (Exception ex)
		{
			ucError.ErrorMessage = ex.Message;
			ucError.Visible = true;
		}
	}
	protected void cmdHiddenSubmit_Click(object sender, EventArgs e)
	{
		try
		{
			BindData();
		}
		catch (Exception ex)
		{
			ucError.ErrorMessage = ex.Message;
			ucError.Visible = true;
		}
	}

	private void BindData()
	{

		string[] alColumns = { "FLDNAME", "FLDRANKCODE", "FLDCERTIFICATELOA", "FLDCOURSEOFFICER", "FLDFINALAUTHORITY", "FLDSTATUS","FLDCERTIFICATENO","FLDCERTGENERATEDBY","FLDCERTDATE" };
		string[] alCaptions = { "Name", "Rank", "Cert/LOA", "Course Oficer", "Final Authority", "Status","Cert No","Generated by","Generated Date" };

		DataSet ds = PhoenixCrewCourseEnrollment.CrewCourseCertificationSearch(
		   General.GetNullableInteger(Request.QueryString["batchid"]));


		General.SetPrintOptions("gvCertificationList", "Certification List", alCaptions, alColumns, ds);

		if (ds.Tables[0].Rows.Count > 0)
		{
			gvCertificationList.DataSource = ds;
			gvCertificationList.DataBind();

		}
		else
		{
			DataTable dt = ds.Tables[0];
			ShowNoRecordsFound(dt, gvCertificationList);
		}

	
	}

	protected void cmdSort_Click(object sender, EventArgs e)
	{
		ImageButton ib = (ImageButton)sender;

		BindData();

	}
	protected void gvCertificationList_RowDeleting(object sender, GridViewDeleteEventArgs de)
	{
		BindData();

	}
	protected void gvCertificationList_RowCommand(object sender, GridViewCommandEventArgs e)
	{
		try
		{
			if (e.CommandName.ToUpper().Equals("SORT"))
				return;

			GridView _gridView = (GridView)sender;
			int nCurrentRow = Int32.Parse(e.CommandArgument.ToString());
			//if (e.CommandName.ToUpper().Equals("CERTIFICATE"))
			//{
			//    Label lblempid = (Label)gvCertificationList.Rows[nCurrentRow].FindControl("lblEmployeeId");
			//    lb.Attributes.Add("onclick", "parent.Openpopup('codehelp1', '', 'CrewCompanyExperienceList.aspx?type=p&empid=" + Filter.CurrentCrewSelection + "&CrewCompanyExperienceId=" + l.Text + "');return false;");
			//    Response.Redirect("../Reports/ReportsView.aspx?applicationcode=4&reportcode=COURSECERTIFICATE&batchid=" + Request.QueryString["batchid"] + "&empid=" + lblempid.Text + "&showmenu=1", false);
			//}
			//else if (e.CommandName.ToUpper().Equals("LOA"))
			//{
			//    Label lblempid = (Label)gvCertificationList.Rows[nCurrentRow].FindControl("lblEmployeeId");

			//    Response.Redirect("../Reports/ReportsView.aspx?applicationcode=4&reportcode=COURSELOA&batchid=" + Request.QueryString["batchid"] + "&empid=" + lblempid.Text + "&showmenu=1", false);
			//}
			BindData();
		}

		catch (Exception ex)
		{
			ucError.ErrorMessage = ex.Message;
			ucError.Visible = true;
		}
	}

	protected void gvCertificationList_RowUpdating(object sender, GridViewUpdateEventArgs e)
	{
		GridView _gridView = (GridView)sender;
		int nCurrentRow = e.RowIndex;
		try
		{
			string empid = ((Label)_gridView.Rows[nCurrentRow].FindControl("lblEmployeeIdEdit")).Text;
			string certificatenumber = ((TextBox)_gridView.Rows[nCurrentRow].FindControl("txtCertificateNoEdit")).Text;


			if (!IsValidCertificate(certificatenumber))
			{
				ucError.Visible = true;
				return;
			}

			PhoenixCrewCourseEnrollment.UpdateCrewPostSeaCertificate(
				Convert.ToInt32(Request.QueryString["batchid"])
				, Convert.ToInt32(empid)
				, certificatenumber );

			_gridView.EditIndex = -1;
			BindData();

		}
		catch (Exception ex)
		{
			ucError.HeaderMessage = "Please make the required correction";
			ucError.ErrorMessage = ex.Message;
			ucError.Visible = true;

		}
	}
	private bool IsValidCertificate(string certificatenumber)
	{

		ucError.HeaderMessage = "Please provide the following required information";

		if (certificatenumber.Trim() == "")
			ucError.ErrorMessage = "Certificate Number is required";


		return (!ucError.IsError);
	}
	protected void gvCertificationList_RowEditing(object sender, GridViewEditEventArgs e)
	{
		GridView _gridView = (GridView)sender;
		int nCurrentRow = e.NewEditIndex;
		_gridView.SelectedIndex = e.NewEditIndex;
		_gridView.EditIndex = e.NewEditIndex;
		BindData();
	}

	protected void gvCertificationList_ItemDataBound(Object sender, System.Web.UI.WebControls.GridViewRowEventArgs e)
	{
		

		if (e.Row.RowType == DataControlRowType.DataRow)
		{
			if (!e.Row.RowState.Equals(DataControlRowState.Alternate | DataControlRowState.Edit) && !e.Row.RowState.Equals(DataControlRowState.Edit)
				&& !e.Row.RowState.Equals(DataControlRowState.Selected | DataControlRowState.Edit) && !e.Row.RowState.Equals(DataControlRowState.Alternate | DataControlRowState.Selected | DataControlRowState.Edit))
			{

				Label lblbatchid = (Label)e.Row.FindControl("lblBatchid");
				Label lblempid = (Label)e.Row.FindControl("lblEmployeeId");
				Label lblcertificateyn = (Label)e.Row.FindControl("lblCertificateyn");
				Label lblStatusid = (Label)e.Row.FindControl("lblStatusid");
				ImageButton imgCertificate = (ImageButton)e.Row.FindControl("imgCert");
				ImageButton imgEdit = (ImageButton)e.Row.FindControl("cmdEdit");
				Label lblCertNo = (Label)e.Row.FindControl("lblCertNo");
				if (!SessionUtil.CanAccess(this.ViewState, imgCertificate.CommandName)) imgCertificate.Visible = false;

				ImageButton imgLOA = (ImageButton)e.Row.FindControl("imgLOA");
				if (!SessionUtil.CanAccess(this.ViewState, imgLOA.CommandName)) imgLOA.Visible = false;
				if (lblCertNo.Text == "")
				{
					imgEdit.Visible = false;
				}
				else
				{
					imgEdit.Visible = true;
				}
				if (lblStatusid.Text == "2")
				{
					if (lblcertificateyn.Text == "1")
					{
						imgCertificate.Visible = true;
					}
					else
					{
						imgCertificate.Visible = false;
					}
				}
				else
				{
					imgLOA.Visible = false;
					imgCertificate.Visible = false;
				}
				imgCertificate.Attributes.Add("onclick", "parent.Openpopup('codehelp1', '', '../Reports/ReportsView.aspx?applicationcode=4&reportcode=COURSECERTIFICATE&showword=0&showexcel=0&batchid=" + Request.QueryString["batchid"] + "&empid=" + lblempid.Text + "&showmenu=1" + "');return false;");
				imgLOA.Attributes.Add("onclick", "parent.Openpopup('codehelp1', '', '../Reports/ReportsView.aspx?applicationcode=4&reportcode=COURSELOA&showword=0&showexcel=0&batchid=" + Request.QueryString["batchid"] + "&empid=" + lblempid.Text + "&showmenu=1" + "');return false;");
			}
		}

	}
	protected void gvCertificationList_RowCancelingEdit(object sender, GridViewCancelEditEventArgs e)
	{
		GridView _gridView = (GridView)sender;
		_gridView.EditIndex = -1;
		BindData();
	}

	private void ShowNoRecordsFound(DataTable dt, GridView gv)
	{
		dt.Rows.Add(dt.NewRow());
		gv.DataSource = dt;
		gv.DataBind();

		int colcount = gv.Columns.Count;
		gv.Rows[0].Cells.Clear();
		gv.Rows[0].Cells.Add(new TableCell());
		gv.Rows[0].Cells[0].ColumnSpan = colcount;
		gv.Rows[0].Cells[0].HorizontalAlign = HorizontalAlign.Center;
		gv.Rows[0].Cells[0].ForeColor = System.Drawing.Color.Red;
		gv.Rows[0].Cells[0].Font.Bold = true;
		gv.Rows[0].Cells[0].Text = "NO RECORDS FOUND";
		gv.Rows[0].Attributes["onclick"] = "";
	}

	public StateBag ReturnViewState()
	{
		return ViewState;
	}
}
